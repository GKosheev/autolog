const express = require("express");
const Item = require("../models/item");
const security = require("../middleware/security");
const router = express.Router();

// endpoint to get a generic list of items in inventory
// TODO: check user has access to inventory through middleware
router.get("/", security.requireAuthenticatedUser, async (req, res, next) => {
  try {
	// query parameters
    const inventoryId = req.query.inventoryId;
    const page = req.query.page;
    const search = req.query.search;
	console.log(search);
    const { user } = res.locals;

    const items = await Item.listInventoryItems(inventoryId, search, page);
    return res.status(201).json({ items });
  } catch (err) {
    next(err);
  }
});

// endpoint to get item by ID
router.get(
  "/id/:itemId",
  security.requireAuthenticatedUser,
  async (req, res, next) => {
    try {
      const { itemId } = req.params;

      const item = await Item.getItemById(itemId);

      return res.status(201).json({ item });
    } catch (error) {
      next(error);
    }
  }
);

// endpoint to create an item
router.post("/", security.requireAuthenticatedUser, async (req, res, next) => {
  try {
    const { user } = res.locals;
    const items = await Item.createItem({ item: req.body, user: user });
    return res.status(201).json({ items });
  } catch (err) {
    next(err);
  }
});

// endpoint to get items generated by user
router.get("/me", security.requireAuthenticatedUser, async (req, res, next) => {
  try {
    //send json response to client with all of the user-owned item instances in an array
    const { user } = res.locals;
    const items = await Item.listItemForUser(user);
    return res.status(201).json({ items });
  } catch (err) {
    next(err);
  }
});

module.exports = router;
